plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

bootJar {
    archiveFileName = 'app.jar'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    //@Valid(유효성 검증)
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.8'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.2'

    // dataBase
    // runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // token 설정
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // AWS S3
    implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.1.0'

    // Log4j2
    // https://github.com/technical-learn-room/spring-log4j2-learn
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.1.2'

    // Map Struct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib{
    from {
        image = 'amazoncorretto:17'
        platforms {
//          ARM64 : Mac OS
//			AMD64 : Windows & Linux
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'docker.io/ghkd110/techeer_log'
        tags = ['latest', 'test']
        auth {
            username = findProperty('jib.to.auth.username') ?: " "
            password = findProperty('jib.to.auth.password') ?: " "

            if (username == " " || password == " ") {
                logger.warn("gradle.properties 파일이 있는지 확인")
            }
        }
    }
    container {
        jvmFlags = ['-Xms512m', '-Xdebug']
        ports = ['8080']
        environment = [
                'ACTIVE_PROFILE': 'dev'
        ]
        mainClass = 'com.techeerlog.BackendApplication'
//        format='OCI'
        creationTime='USE_CURRENT_TIMESTAMP'
        entrypoint=[
                'java',
                '-Dspring.profiles.active=${ACTIVE_PROFILE}',
                '-cp',
                '/app/resources:/app/classes:/app/libs/*',
                'com.techeerlog.BackendApplication'
        ]
    }
}